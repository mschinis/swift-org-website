I"Z)<p>This post describes the goals, release process, and estimated schedule for Swift 3.1.</p>

<p>Swift 3.1 is intended to be <a href="https://swift.org/blog/swift-3.1-release-process/#source-compatibility">source compatible</a> with Swift 3.0.
It will contain a few additive enhancements to the core language as well as improvements to the Swift Package Manager, Swift on Linux, and general quality improvements to the compiler and Standard Library.</p>

<p>Swift 3.1 is intended to be released in the spring of 2017.</p>

<h2 id="source-compatibility">Source Compatibility</h2>

<p>It is a strong goal that the vast majority of sources that built with the Swift 3.0 compiler continue to build with the Swift 3.1 compiler.  The exception will be bug fixes to the compiler that cause it to reject code that should never have been accepted in the first place.  These cases should be relatively rare in practice.</p>

<p>A description of the intent for source compatibility for Swift releases can be found on a <a href="https://lists.swift.org/pipermail/swift-evolution/Week-of-Mon-20161128/029099.html">thread</a> on the <a href="https://lists.swift.org/mailman/listinfo/swift-evolution">swift-evolution</a> mailing list.</p>

<p>Please file <a href="https://bugs.swift.org">bug reports</a> if you encounter cases where the Swift 3.1 compiler unexpectedly rejects code that previously compiled with the Swift 3.0 compiler.</p>

<h2 id="snapshots-of-swift-31">Snapshots of Swift 3.1</h2>

<p>Previous releases of Swift have had “Developer Previews”, e.g. “Preview 1”, “Preview 2”, etc., that represent stabilized snapshots of a Swift release as it converges.  Developer previews have often been irregularly spaced apart, and have sometimes not provided enough granularity for the Swift community to try out new features or verify bug fixes in a release as it converges.</p>

<p>For Swift 3.1 there will instead be daily downloadable snapshots of the release branch.  Snapshots will be produced as part of <a href="https://ci.swift.org">continuous integration</a> testing.  The cadence of downloadable snapshots will thus be more frequent and granular.  Snapshots will be posted daily, assuming tests are passing.</p>

<p>Once Swift 3.1 is released, official final builds will also be posted in addition to the snapshots.</p>

<h2 id="getting-changes-into-swift-31">Getting Changes into Swift 3.1</h2>

<p>Swift 3.1 is intended to be limited in scope, with the desire to move focus early in 2017 to the development of Swift 4.  To meet this goal, Swift 3.1 will include changes in mainline development (i.e. the <code class="language-plaintext highlighter-rouge">master</code> branch) only until January 16.  After that date there will be a “bake” period in which only select, critical fixes will go into the <code class="language-plaintext highlighter-rouge">swift-3.1-branch</code> and move <code class="language-plaintext highlighter-rouge">master</code> on to Swift 4 development.</p>

<h3 id="branches">Branches</h3>

<ul>
  <li>
    <p><strong>master</strong>: With the exception of the <a href="https://github.com/apple/swift-llvm">swift-llvm</a> and <a href="https://github.com/apple/swift-clang">swift-clang</a> repositories (see <a href="https://swift.org/blog/swift-3.1-release-process/#impacted-repositories">Impacted Repositories</a>), development of Swift 3.1 happens in <code class="language-plaintext highlighter-rouge">master</code>.  All changes going in <code class="language-plaintext highlighter-rouge">master</code> will be part of the final Swift 3.1 release until January 16.  At that point <code class="language-plaintext highlighter-rouge">master</code> tracks development for Swift 4.</p>
  </li>
  <li>
    <p><strong>swift-3.1-branch</strong>: Release management for Swift 3.1 happens on the <code class="language-plaintext highlighter-rouge">swift-3.1-branch</code>.  All Swift 3.1 snapshots are built from this branch, and Swift 3.1 will GM from this branch as well.</p>
  </li>
</ul>

<p>Operationally, <code class="language-plaintext highlighter-rouge">master</code> will be regularly merged into <code class="language-plaintext highlighter-rouge">swift-3.1-branch</code> approximately every two weeks until January 16.  The two week window provides a buffer between hot development on <code class="language-plaintext highlighter-rouge">master</code> and a curated release branch.  Changes may be cherry-picked (via pull requests) into <code class="language-plaintext highlighter-rouge">swift-3.1-branch</code> between merges of <code class="language-plaintext highlighter-rouge">master</code>.</p>

<p>A notable exception to this plan is the <a href="https://github.com/apple/swift-package-manager">swift-package-manager</a>, which will merge from <code class="language-plaintext highlighter-rouge">master</code> into the <code class="language-plaintext highlighter-rouge">swift-3.1-branch</code> daily.</p>

<h3 id="philosophy-on-taking-changes-into-swift-31">Philosophy on Taking Changes into Swift 3.1</h3>

<ul>
  <li>
    <p>Source compatibility with Swift 3.0 is a top priority.</p>
  </li>
  <li>
    <p>As Swift 3.1 converges only changes that align with the core goals of the release will be considered.</p>
  </li>
  <li>
    <p>All language and API changes for Swift 3.1 will go through the <a href="https://github.com/apple/swift-evolution">Swift Evolution</a> process.</p>
  </li>
  <li>
    <p>Major work for Swift 3.1 should orient around the January 16 date, but changes can still land in 3.1 afterwards per the judgement of the release manager.  As the release converges, the criteria for pulling changes into 3.1 will become increasingly restrictive.</p>
  </li>
</ul>

<h2 id="impacted-repositories">Impacted Repositories</h2>

<p>The following repositories will have a <code class="language-plaintext highlighter-rouge">swift-3.1-branch</code> branch to track sources as part of Swift 3.1 release:</p>

<ul>
  <li><a href="https://github.com/apple/swift">swift</a></li>
  <li><a href="https://github.com/apple/swift-lldb">swift-lldb</a></li>
  <li><a href="https://github.com/apple/swift-cmark">swift-cmark</a></li>
  <li><a href="https://github.com/apple/swift-llbuild">swift-llbuild</a></li>
  <li><a href="https://github.com/apple/swift-package-manager">swift-package-manager</a></li>
  <li><a href="https://github.com/apple/swift-corelibs-libdispatch">swift-corelibs-libdispatch</a></li>
  <li><a href="https://github.com/apple/swift-corelibs-foundation">swift-corelibs-foundation</a></li>
  <li><a href="https://github.com/apple/swift-corelibs-xctest">swift-corelibs-xctest</a></li>
  <li><a href="https://github.com/apple/swift-llvm">swift-llvm</a></li>
  <li><a href="https://github.com/apple/swift-clang">swift-clang</a></li>
</ul>

<p>Note that the <a href="https://github.com/apple/swift-llvm">swift-llvm</a> and <a href="https://github.com/apple/swift-clang">swift-clang</a> repositories have already branched <code class="language-plaintext highlighter-rouge">swift-3.1-branch</code> from <code class="language-plaintext highlighter-rouge">master</code> and will not rebranch again.</p>

<h2 id="release-managers">Release Managers</h2>

<p>The overall management of the release will be overseen by the following individuals, who will announce when stricter control of change goes into effect for the Swift 3.1 release as the release converges:</p>

<ul>
  <li>
    <p><a href="https://github.com/tkremenek">Ted Kremenek</a> is the overall release manager for Swift 3.1.</p>
  </li>
  <li>
    <p><a href="https://github.com/fredriss">Frédéric Riss</a>
is the release manager for <a href="https://github.com/apple/swift-llvm">swift-llvm</a> and <a href="https://github.com/apple/swift-clang">swift-clang</a>.</p>
  </li>
  <li>
    <p><a href="https://github.com/gosnellj">Jason Gosnell</a> is the
release manager for <a href="https://github.com/apple/swift-lldb">swift-lldb</a>.</p>
  </li>
  <li>
    <p><a href="https://github.com/parkera">Tony Parker</a> is the release
manager for <a href="https://github.com/apple/swift-corelibs-foundation">swift-corelibs-foundation</a>.</p>
  </li>
  <li>
    <p><a href="https://github.com/das">Daniel Steffen</a> is the release
manager for <a href="https://github.com/apple/swift-corelibs-libdispatch">swift-corelibs-libdispatch</a>.</p>
  </li>
  <li>
    <p><a href="https://github.com/briancroom">Brian Croom</a> is the
release manager for <a href="https://github.com/apple/swift-corelibs-xctest">swift-corelibs-xctest</a>.</p>
  </li>
  <li>
    <p><a href="https://github.com/rballard">Rick Ballard</a> is the release
manager for <a href="https://github.com/apple/swift-package-manager">swift-package-manager</a>.</p>
  </li>
</ul>

<p>Please feel free to email <a href="https://lists.swift.org/mailman/listinfo/swift-dev">swift-dev</a> or <a href="https://github.com/tkremenek">Ted Kremenek</a> directly concerning any
questions about the release management process.</p>

<h2 id="pull-requests-for-release-branch">Pull Requests for Release Branch</h2>

<p>All pull requests nominating changes for inclusion in the release branch
should include the following information:</p>

<ul>
  <li>
    <p><strong>Explanation</strong>: A description of the issue being fixed or
enhancement being made.  This can be brief, but it should be
clear.</p>
  </li>
  <li>
    <p><strong>Scope</strong>: An assessment of the impact/importance of the change.
For example, is the change a source-breaking language change, etc.</p>
  </li>
  <li>
    <p><strong>SR Issue</strong>: The SR if the change fixes/implements an
issue/enhancement on <a href="https://bugs.swift.org">bugs.swift.org</a>.</p>
  </li>
  <li>
    <p><strong>Risk</strong>: What is the (specific) risk to the release for taking this
change?</p>
  </li>
  <li>
    <p><strong>Testing</strong>: What specific testing has been done or needs to be done
to further validate any impact of this change?</p>
  </li>
</ul>

<p>One or more <a href="https://swift.org/community/#code-owners">code owners</a> for the impacted
components should review the change. Technical review can be delegated
by a code owner or otherwise requested as deemed appropriate or
useful.</p>

<p><strong>All change</strong> going into the <code class="language-plaintext highlighter-rouge">swift-3.1-branch</code> (outside changes being merged in automatically from <code class="language-plaintext highlighter-rouge">master</code>) <strong>must go through pull requests</strong> that are accepted by the corresponding release manager.</p>

:ET