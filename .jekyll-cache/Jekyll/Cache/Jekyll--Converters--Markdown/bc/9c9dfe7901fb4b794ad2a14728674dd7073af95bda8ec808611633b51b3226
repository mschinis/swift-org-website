I"&<p>This post describes the goals, release process, and estimated schedule for Swift 4.1.</p>

<p>Swift 4.1 is a source compatible update to Swift 4.0.  It will contain a few additive enhancements to the core language as well as improvements to the Swift Package Manager, Swift on Linux, and general quality improvements to the compiler and Standard Library.</p>

<p>Swift 4.1 is <em>not</em> binary compatible with 4.0.  It contains a variety of under-the-hood changes that are part of the effort to <a href="https://swift.org/abi-stability/">stabilize the Swift ABI</a> in Swift 5.</p>

<p>Swift 4.1 is intended to be released in the first half of 2018.</p>

<h2 id="source-compatibility">Source Compatibility</h2>

<p>The vast majority of sources that built with the Swift 4.0 compiler (including those using the Swift 3 compatibility mode) should compile with the Swift 4.1 compiler.  There will be some exceptional cases where this cannot be an absolute guarantee.  This includes fixes to incorrect behavior in the compiler or corner cases with the uses of generics now addressed by the introduction of long-anticipated generics features.  The expectation, however, is that most projects will continue to build with no source changes.</p>

<h2 id="snapshots-of-swift-41">Snapshots of Swift 4.1</h2>

<p>Downloadable snapshots of the Swift 4.1 release branch will be posted regularly as part of <a href="https://ci.swift.org">continuous integration</a> testing.</p>

<p>Once Swift 4.1 is released the official final builds will also be posted in addition to the snapshots.</p>

<h2 id="getting-changes-into-swift-41">Getting Changes into Swift 4.1</h2>

<p>The <code class="language-plaintext highlighter-rouge">swift-4.1-branch</code> contains the changes that will be released in Swift 4.1.  The branch will be managed as follows:</p>

<ul>
  <li><strong>October 18, 2017 (initial branching)</strong>: The <code class="language-plaintext highlighter-rouge">swift-4.1-branch</code> will be initially cut from <code class="language-plaintext highlighter-rouge">master</code>.</li>
  <li>Approximately every two weeks, <code class="language-plaintext highlighter-rouge">master</code> will be merged into <code class="language-plaintext highlighter-rouge">swift-4.1-branch</code> until the final branch date.</li>
  <li><strong>December 4, 2017 (final branching)</strong>: The <code class="language-plaintext highlighter-rouge">swift-4.1-branch</code> will have changes merged from <code class="language-plaintext highlighter-rouge">master</code> one last time.  After the final branch date there will be a “bake” period in which only select, critical fixes will go into the release (via pull requests).</li>
</ul>

<p>Four notable exceptions to this plan are <a href="https://github.com/apple/swift-package-manager">swift-package-manager</a>, <a href="https://github.com/apple/swift-llbuild">swift-llbuild</a>, <a href="https://github.com/apple/swift-corelibs-foundation">swift-corelibs-foundation</a>, and <a href="https://github.com/apple/swift-corelibs-libdispatch">swift-corelibs-libdispatch</a> which will merge from <code class="language-plaintext highlighter-rouge">master</code> into <code class="language-plaintext highlighter-rouge">swift-4.1-branch</code> daily and whose final cutoff date for changes will extend beyond December 4 and will be announced later.</p>

<h3 id="philosophy-on-taking-changes-into-swift-41">Philosophy on Taking Changes into Swift 4.1</h3>

<ul>
  <li>
    <p>All language and API changes for Swift 4.1 will go through the <a href="https://github.com/apple/swift-evolution">Swift Evolution</a> process, with criteria for what changes are in scope for the release documented there.</p>
  </li>
  <li>
    <p>Other changes (e.g., bug fixes, diagnostic improvements, SourceKit interface improvements) will be accepted based on their risk and impact.</p>
  </li>
  <li>
    <p>Low-risk test tweaks will also be accepted late into the release branch if it aids in the qualification of the release.</p>
  </li>
  <li>
    <p>As the release converges, the criteria for accepted changes will become increasingly restrictive.</p>
  </li>
</ul>

<h2 id="impacted-repositories">Impacted Repositories</h2>

<p>The following repositories will have a <code class="language-plaintext highlighter-rouge">swift-4.1-branch</code> branch to track sources as part of Swift 4.1 release:</p>

<ul>
  <li><a href="https://github.com/apple/swift">swift</a></li>
  <li><a href="https://github.com/apple/swift-clang">swift-clang</a></li>
  <li><a href="https://github.com/apple/swift-cmark">swift-cmark</a></li>
  <li><a href="https://github.com/apple/swift-compiler-rt">swift-compiler-rt</a></li>
  <li><a href="https://github.com/apple/swift-corelibs-foundation">swift-corelibs-foundation</a></li>
  <li><a href="https://github.com/apple/swift-corelibs-libdispatch">swift-corelibs-libdispatch</a></li>
  <li><a href="https://github.com/apple/swift-corelibs-xctest">swift-corelibs-xctest</a></li>
  <li><a href="https://github.com/apple/swift-integration-tests">swift-integration-tests</a></li>
  <li><a href="https://github.com/apple/swift-llbuild">swift-llbuild</a></li>
  <li><a href="https://github.com/apple/swift-lldb">swift-lldb</a></li>
  <li><a href="https://github.com/apple/swift-llvm">swift-llvm</a></li>
  <li><a href="https://github.com/apple/swift-package-manager">swift-package-manager</a></li>
  <li><a href="https://github.com/apple/swift-xcode-playground-support">swift-xcode-playground-support</a></li>
</ul>

<p>The <a href="https://github.com/apple/swift-llvm">swift-llvm</a>, <a href="https://github.com/apple/swift-clang">swift-clang</a>, <a href="https://github.com/apple/swift-compiler-rt">swift-compiler-rt</a>, and <a href="https://github.com/apple/swift-lldb">swift-lldb</a> repositories have already branched <code class="language-plaintext highlighter-rouge">swift-4.1-branch</code> from <code class="language-plaintext highlighter-rouge">master</code> and will not rebranch again.</p>

<h2 id="release-managers">Release Managers</h2>

<p>The overall management of the release will be overseen by the following individuals, who will announce when stricter control of change goes into effect for the Swift 4 release as the release converges:</p>

<ul>
  <li>
    <p><a href="https://github.com/tkremenek">Ted Kremenek</a> is the overall release manager for Swift 4.1.</p>
  </li>
  <li>
    <p><a href="https://github.com/fredriss">Frédéric Riss</a>
is the release manager for <a href="https://github.com/apple/swift-llvm">swift-llvm</a>, <a href="https://github.com/apple/swift-clang">swift-clang</a>, and <a href="https://github.com/apple/swift-compiler-rt">swift-compiler-rt</a>.</p>
  </li>
  <li>
    <p><a href="https://github.com/airspeedswift">Ben Cohen</a> is the release manager for the Swift Standard Library.</p>
  </li>
  <li>
    <p><a href="https://github.com/parkera">Tony Parker</a> is the release
manager for <a href="https://github.com/apple/swift-corelibs-foundation">swift-corelibs-foundation</a>.</p>
  </li>
  <li>
    <p><a href="https://github.com/das">Daniel Steffen</a> is the release
manager for <a href="https://github.com/apple/swift-corelibs-libdispatch">swift-corelibs-libdispatch</a>.</p>
  </li>
  <li>
    <p><a href="https://github.com/briancroom">Brian Croom</a> is the
release manager for <a href="https://github.com/apple/swift-corelibs-xctest">swift-corelibs-xctest</a>.</p>
  </li>
  <li>
    <p><a href="https://github.com/rballard">Rick Ballard</a> is the release
manager for <a href="https://github.com/apple/swift-package-manager">swift-package-manager</a>.</p>
  </li>
  <li>
    <p><a href="https://github.com/ddunbar">Daniel Dunbar</a> is the release
manager for <a href="https://github.com/apple/swift-llbuild">swift-llbuild</a>.</p>
  </li>
</ul>

<p>Please feel free to email <a href="https://lists.swift.org/mailman/listinfo/swift-dev">swift-dev</a> or <a href="https://github.com/tkremenek">Ted Kremenek</a> directly concerning any
questions about the release management process.</p>

<h2 id="pull-requests-for-release-branch">Pull Requests for Release Branch</h2>

<p>In order for a pull request to be considered for inclusion in the release branch it must include the following information:</p>

<ul>
  <li>
    <p><strong>Explanation</strong>: A description of the issue being fixed or
enhancement being made.  This can be brief, but it should be
clear.</p>
  </li>
  <li>
    <p><strong>Scope</strong>: An assessment of the impact/importance of the change.
For example, is the change a source-breaking language change, etc.</p>
  </li>
  <li>
    <p><strong>SR Issue</strong>: The SR if the change fixes/implements an
issue/enhancement on <a href="https://bugs.swift.org">bugs.swift.org</a>.</p>
  </li>
  <li>
    <p><strong>Risk</strong>: What is the (specific) risk to the release for taking this
change?</p>
  </li>
  <li>
    <p><strong>Testing</strong>: What specific testing has been done or needs to be done
to further validate any impact of this change?</p>
  </li>
  <li>
    <p><strong>Reviewer</strong>: One or more <a href="https://swift.org/community/#code-owners">code owners</a> for the impacted components should review the change. Technical review can be delegated by a code owner or otherwise requested as deemed appropriate or
useful.</p>
  </li>
</ul>

<p><strong>All change</strong> going into the <code class="language-plaintext highlighter-rouge">swift-4.1-branch</code> (outside changes being merged in automatically from <code class="language-plaintext highlighter-rouge">master</code>) <strong>must go through pull requests</strong> that are accepted by the corresponding release manager.</p>

:ET