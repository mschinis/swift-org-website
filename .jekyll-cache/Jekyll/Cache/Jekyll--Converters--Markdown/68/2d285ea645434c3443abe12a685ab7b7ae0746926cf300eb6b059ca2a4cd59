I"o.<p>This post describes the goals, release process, and estimated schedule for <strong>Swift 5.1</strong>.</p>

<h2 id="motivation-and-goals">Motivation and Goals</h2>

<p>The primary goal of Swift 5.1 is for the language to achieve
<a href="https://forums.swift.org/t/plan-for-module-stability/14551">module stability</a>.</p>

<h2 id="binary-compatibility">Binary Compatibility</h2>

<p>On Apple platforms, since the ABI is now stabilized, Swift 5.1 is binary
compatible with Swift 5.0, and is binary compatible with future releases
of Swift.</p>

<p>On non-Apple platforms (such as Linux) the ABI is not yet fully stable
in order to allow for more vetting. Such vetting will be particularly
needed for the new platforms based on Linux.</p>

<h2 id="source-compatibility">Source Compatibility</h2>

<p>As with Swift 5.0, we expect that majority of sources that built with
the Swift 5.0 compiler will compile with the Swift 5.1 compiler.
However, it is possible that a bug fix in Swift 5.1 may cause it to
detect errors in code that were not detected before.</p>

<h2 id="snapshots-of-swift-51">Snapshots of Swift 5.1</h2>

<p>Downloadable snapshots of the Swift 5.1 release branch will be posted
regularly as part of <a href="https://ci.swift.org">continuous integration</a> testing.</p>

<p>Once Swift 5.1 is released, the official final builds will also be posted in
addition to the snapshots.</p>

<h2 id="getting-changes-into-swift-51">Getting Changes into Swift 5.1</h2>

<p>The development of Swift 5.0 required an unusual amount of focus and
attention throughout the time it converged because every issue had to be
evaluated for its permanent ABI impact. Consequently, Swift 5.1 has a
significantly shorter development window than previous releases. This
tighter time constraint is needed to ensure delivering a mature and
stable 5.1 release, with stricter cutoff dates for disruptive changes.</p>

<p>The <code class="language-plaintext highlighter-rouge">swift-5.1-branch</code> contains the changes that will be released in Swift
5.1.  The branch will be managed as follows:</p>

<ul>
  <li>
    <p>The <code class="language-plaintext highlighter-rouge">swift-5.1-branch</code> has already been initially cut from <code class="language-plaintext highlighter-rouge">master</code>.</p>
  </li>
  <li>
    <p>Periodically, the <code class="language-plaintext highlighter-rouge">master</code> development branch will be merged into
<code class="language-plaintext highlighter-rouge">swift-5.1-branch</code> until the final branch date.</p>
  </li>
  <li>
    <p><strong>March 18, 2019 (final branching)</strong>: The <code class="language-plaintext highlighter-rouge">swift-5.1-branch</code> will have
changes merged from <code class="language-plaintext highlighter-rouge">master</code> one last time.  After the final branch date
there will be a “bake” period in which only select, critical fixes will go
into the release (via pull requests).</p>
  </li>
</ul>

<p>Some notable exceptions to this plan are indicated in the table below.
Each will merge from <code class="language-plaintext highlighter-rouge">master</code> into <code class="language-plaintext highlighter-rouge">swift-5.1-branch</code> daily.  The final
cutoff date for changes to each exception will extend beyond March 18
and will be announced later.</p>

<table>
  <thead>
    <tr>
      <th>Project</th>
      <th>Cutoff date</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><a href="https://github.com/apple/indexstore-db">indexstore-db</a></td>
      <td>To be announced</td>
    </tr>
    <tr>
      <td><a href="https://github.com/apple/sourcekit-lsp">sourcekit-lsp</a></td>
      <td>To be announced</td>
    </tr>
    <tr>
      <td><a href="https://github.com/apple/swift-corelibs-foundation">swift-corelibs-foundation</a></td>
      <td>To be announced</td>
    </tr>
    <tr>
      <td><a href="https://github.com/apple/swift-corelibs-libdispatch">swift-corelibs-libdispatch</a></td>
      <td>To be announced</td>
    </tr>
    <tr>
      <td><a href="https://github.com/apple/swift-corelibs-xctest">swift-corelibs-xctest</a></td>
      <td>To be announced</td>
    </tr>
    <tr>
      <td><a href="https://github.com/apple/swift-llbuild">swift-llbuild</a></td>
      <td>April 10, 2019</td>
    </tr>
    <tr>
      <td><a href="https://github.com/apple/swift-package-manager">swift-package-manager</a></td>
      <td>April 10, 2019</td>
    </tr>
    <tr>
      <td><a href="https://github.com/apple/swift-stress-tester">swift-stress-tester</a></td>
      <td>To be announed</td>
    </tr>
    <tr>
      <td><a href="https://github.com/apple/swift">swift</a></td>
      <td>March 18, 2019</td>
    </tr>
  </tbody>
</table>

<h3 id="philosophy-on-taking-changes-into-swift-51">Philosophy on Taking Changes into Swift 5.1</h3>

<ul>
  <li>
    <p>All language and API changes for Swift 5.1 will go through the <a href="https://github.com/apple/swift-evolution">Swift
Evolution</a> process.  Evolution
proposals should aim to be completed by the branch date in order   to
increase their chances of impacting the Swift 5.1 release.  Exceptions
will be considered on a case-by-case basis, particularly if they tie
in with the core goal of the release.</p>
  </li>
  <li>
    <p>Other changes (e.g., bug fixes, diagnostic improvements, SourceKit interface
improvements) will be accepted based on their risk and impact.</p>
  </li>
  <li>
    <p>Low-risk test tweaks will also be accepted late into the release branch if
it aids in the qualification of the release.</p>
  </li>
  <li>
    <p>As the release converges, the criteria for accepted changes will become
increasingly restrictive.</p>
  </li>
</ul>

<h2 id="impacted-repositories">Impacted Repositories</h2>

<p>The following repositories will have a <code class="language-plaintext highlighter-rouge">swift-5.1-branch</code> branch to track
sources as part of Swift 5.1 release:</p>

<ul>
  <li><a href="https://github.com/apple/indexstore-db">indexstore-db</a></li>
  <li><a href="https://github.com/apple/sourcekit-lsp">sourcekit-lsp</a></li>
  <li><a href="https://github.com/apple/swift">swift</a></li>
  <li><a href="https://github.com/apple/swift-clang">swift-clang</a></li>
  <li><a href="https://github.com/apple/swift-cmark">swift-cmark</a></li>
  <li><a href="https://github.com/apple/swift-compiler-rt">swift-compiler-rt</a></li>
  <li><a href="https://github.com/apple/swift-corelibs-foundation">swift-corelibs-foundation</a></li>
  <li><a href="https://github.com/apple/swift-corelibs-libdispatch">swift-corelibs-libdispatch</a></li>
  <li><a href="https://github.com/apple/swift-corelibs-xctest">swift-corelibs-xctest</a></li>
  <li><a href="https://github.com/apple/swift-integration-tests">swift-integration-tests</a></li>
  <li><a href="https://github.com/apple/swift-llbuild">swift-llbuild</a></li>
  <li><a href="https://github.com/apple/swift-lldb">swift-lldb</a></li>
  <li><a href="https://github.com/apple/swift-llvm">swift-llvm</a></li>
  <li><a href="https://github.com/apple/swift-package-manager">swift-package-manager</a></li>
  <li><a href="https://github.com/apple/swift-stress-tester">swift-stress-tester</a></li>
  <li><a href="https://github.com/apple/swift-syntax">swift-syntax</a></li>
  <li><a href="https://github.com/apple/swift-xcode-playground-support">swift-xcode-playground-support</a></li>
</ul>

<h2 id="release-managers">Release Managers</h2>

<p>The overall management of the release will be overseen by the following
individuals, who will announce when stricter control of change goes into
effect for the Swift 5.1 release as the release converges:</p>

<ul>
  <li>
    <p><a href="https://github.com/tkremenek">Ted Kremenek</a> is the overall release manager for Swift 5.1.</p>
  </li>
  <li>
    <p><a href="https://github.com/dexonsmith">Duncan Exon Smith</a> is the release manager for
<a href="https://github.com/apple/swift-llvm">swift-llvm</a>, <a href="https://github.com/apple/swift-clang">swift-clang</a>, <a href="https://github.com/apple/swift-compiler-rt">swift-compiler-rt</a>, <a href="https://github.com/apple/swift-clang-tools-extra">swift-clang-tools-extra</a>, and <a href="https://github.com/apple/swift-libcxx">swift-libcxx</a>.</p>
  </li>
  <li>
    <p><a href="https://github.com/orgs/apple/people/fredriss">Fred Riss</a> is the release manager for <a href="https://github.com/apple/swift-lldb">swift-lldb</a>.</p>
  </li>
  <li>
    <p><a href="https://github.com/airspeedswift">Ben Cohen</a> is the release manager for the
Swift Standard Library.</p>
  </li>
  <li>
    <p><a href="https://github.com/parkera">Tony Parker</a> is the release manager for
<a href="https://github.com/apple/swift-corelibs-foundation">swift-corelibs-foundation</a>.</p>
  </li>
  <li>
    <p><a href="https://github.com/MadCoder">Pierre Habouzit</a> is the release manager for
<a href="https://github.com/apple/swift-corelibs-libdispatch">swift-corelibs-libdispatch</a>.</p>
  </li>
  <li>
    <p><a href="https://github.com/briancroom">Brian Croom</a> is the release manager for
<a href="https://github.com/apple/swift-corelibs-xctest">swift-corelibs-xctest</a>.</p>
  </li>
  <li>
    <p><a href="https://github.com/rballard">Rick Ballard</a> is the release manager for
<a href="https://github.com/apple/swift-package-manager">swift-package-manager</a>.</p>
  </li>
  <li>
    <p><a href="https://github.com/ddunbar">Daniel Dunbar</a> is the release manager for
<a href="https://github.com/apple/swift-llbuild">swift-llbuild</a>.</p>
  </li>
  <li>
    <p><a href="https://github.com/akyrtzi">Argyrios Kyrtzidis</a> is the release manager for <a href="https://github.com/apple/sourcekit-lsp">sourcekit-lsp</a>, <a href="https://github.com/apple/indexstore-db">indexstore-db</a>, and <a href="https://github.com/apple/swift-stress-tester">swift-stress-tester</a>.</p>
  </li>
</ul>

<p>Please feel free to post on the <a href="https://forums.swift.org/c/development/compiler">development forum</a>
or contact <a href="https://github.com/tkremenek">Ted Kremenek</a> directly concerning any questions about the release management
process.</p>

<h2 id="pull-requests-for-release-branch">Pull Requests for Release Branch</h2>

<p>In order for a pull request to be considered for inclusion in the release
branch after the final re-branch from <code class="language-plaintext highlighter-rouge">master</code> it must include the following
information:</p>

<ul>
  <li>
    <p><strong>Explanation</strong>: A description of the issue being fixed or enhancement being
made.  This can be brief, but it should be clear.</p>
  </li>
  <li>
    <p><strong>Scope</strong>: An assessment of the impact/importance of the change. For
example, is the change a source-breaking language change, etc.</p>
  </li>
  <li>
    <p><strong>SR Issue</strong>: The SR if the change fixes/implements an issue/enhancement on
<a href="https://bugs.swift.org">bugs.swift.org</a>.</p>
  </li>
  <li>
    <p><strong>Risk</strong>: What is the (specific) risk to the release for taking this change?</p>
  </li>
  <li>
    <p><strong>Testing</strong>: What specific testing has been done or needs to be done to
further validate any impact of this change?</p>
  </li>
  <li>
    <p><strong>Reviewer</strong>: One or more <a href="https://swift.org/community/#code-owners">code owners</a>
for the impacted components should review the change. Technical review can
be delegated by a code owner or otherwise requested as deemed appropriate or
useful.</p>
  </li>
</ul>

<p><strong>All change</strong> going into the <code class="language-plaintext highlighter-rouge">swift-5.1-branch</code> (outside changes being merged
in automatically from <code class="language-plaintext highlighter-rouge">master</code>) <strong>must go through pull requests</strong> that are
accepted by the corresponding release manager.</p>

:ET